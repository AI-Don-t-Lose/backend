// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id         String    @id @default(uuid()) @db.Uuid
  sequence   Int       @default(autoincrement())
  externalId String    @db.VarChar(255) @map("external_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @db.Timestamptz() @map("deleted_at")

  recommendations Recommendation[]

  @@map("auth")
}

model Recommendation {
  id            String    @id @default(uuid()) @db.Uuid
  sequence      Int       @default(autoincrement())
  stockName     String    @db.VarChar(255) @map("stock_name")
  userId        String    @db.Uuid @map("user_id")
  recommendedAt DateTime? @db.Timestamptz() @map("recommended_at")
  score         Float?    @db.DoublePrecision
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  user Auth @relation(fields: [userId], references: [id])

  @@map("recommendations")
}
